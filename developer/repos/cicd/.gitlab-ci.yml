# TODO: check here for more industry standards https://docs.gitlab.com/ee/topics/autodevops/

stages:
    - .pre
    - build
    - test
    - release
    - deploy

image: registry.gitlab.com/$CI_PROJECT_NAMESPACE/cicd

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - .npm/
        - node_modules/
    policy: pull

pre_install:
    stage: .pre
    cache:
        key: ${CI_COMMIT_REF_SLUG}
        paths:
            - .npm/
            - node_modules/
        policy: pull-push
    before_script:
        - env
        - echo $SSH_GITLAB_KEY | base64 -d > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
    script: npm ci --cache .npm --prefer-offline --no-audit

pre_audit:
    stage: .pre
    script: npm run audit

pre_format:
    stage: .pre
    script: npm run format

pre_lint:
    stage: .pre
    script: npm run lint

build_compile:
    stage: build
    script: npm run build
    # artifact dist folder? when npm publish, yes.

test_unit:
    stage: test
    script: npm test
    artifacts:
        paths:
            - coverage/
        reports:
            junit: junit.xml
            cobertura: coverage/cobertura-coverage.xml

release_branches:
    stage: release
    only:
        - develop
    before_script:
        - if [ $CI_PROJECT_NAME == "app" ] ; then npm set unsafe-perm true; fi # to execute npm version command
    script: npm version prerelease --preid=develop  --message "%s [skip ci]"
    after_script:
        - git remote set-url --push origin https://gitlab-ci-token:$GITLAB_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
        - git push origin HEAD:develop

release_master:
    stage: release
    only: 
        - master
    before_script:
        - export GIT_AUTHOR_NAME=$(git config user.name)
        - export GIT_AUTHOR_EMAIL=$(git config user.email)
    script: npm run release
    after_script:
        - git remote set-url --push origin https://gitlab-ci-token:$GITLAB_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
        - git push origin HEAD:develop

deploy_test:
    stage: deploy
    only:
        - develop
    before_script:
        - if [ $CI_PROJECT_NAME == "app" ] ; then expo login --non-interactive -u $EXPO_CLI_USERNAME ; fi
    script: npm run deploy:test

deploy_prod:
    stage: deploy
    only:
        - master
    script: npm run deploy:prod

pages:
    stage: deploy
    only:
        - master
    script:
        - mv coverage/ public/
    artifacts:
        paths:
            - public
